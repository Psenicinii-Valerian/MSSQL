--TEMA: DECLANSATORI(TRIGGERI)--

--TRIGGERI- ACTIVITATI CARE SE EXECUTA IN MOD AUTOMAT LA INSERT, UPDATE SAU DELETE--
--TRIGGERUL SE CREAZA LA NIVEL DE TABELA SI ESTE UNICAL LA NIVEL DE BAZA DE DATE--

--PRINT- AFISEAZA INFORMATIA IN FORMA TEXTUALA--
--SELECT- AFISEAZA INFORMATIA IN FORMA TABELARA--

--SINTAXA: --
CREATE TRIGGER NUME_TRIGGER ON NUME_TABELA
{AFTER|BEFORE} {INSERT|UPDATE|DELETE}
AS
INSTRUCTIUNI;

--CUM SE COPIE INFORMATIA DINTR-UN TABEL IN ALTUL: --
CREATE TABLE PROD(MODEL_ID INT, PRODUCATOR CHAR, TIP VARCHAR(20))
INSERT INTO PROD SELECT MODEL_ID, PRODUCATOR, TIP FROM PRODUSE

--SA SE SCRIE TRIGGER-UL CARE VA REACTIONA LA ELIMINAREA INFORMATIEI DIN TABELA PROD--
CREATE TRIGGER TR1 ON PROD
AFTER DELETE
AS
PRINT 'ELIMINARE CU SUCCES'

DELETE PROD WHERE MODEL_ID = 1752

--SA SE SCRIE TRIGGERUL CARE NU VA PERMITE ELIMINAREA DEFINITIVA A PRODUCATORULUI A--
CREATE TRIGGER TR2 ON PROD 
AFTER UPDATE, DELETE
AS
	DECLARE @X INT;
	SET	@X=(SELECT COUNT(*) FROM PROD WHERE PRODUCATOR = 'A');
	IF (@X = 0)
	BEGIN
		PRINT 'PERICOL DE PIERDERE A PRODUCATORULUI. TRANZACTIE ANULATA';
		ROLLBACK TRANSACTION;
	END;

DELETE PROD WHERE PRODUCATOR = 'A';

-----------------------------------------------------------------------------------------------

				INSERT		UPDATE		DELETE
INSERTED          1			  1			   0
DELETED			  0			  1			   1

--SA SE SCRIE TRIGGER-UL CARE VA REACTIONA SI VA ANUNTA CATE MODIFICARI DE DATE AU AVUT LOC--
ALTER TRIGGER TR1 ON PROD
AFTER UPDATE, DELETE	
AS
	DECLARE @X INT;
	DECLARE @Y INT;
	SET @X = (SELECT COUNT(*) FROM INSERTED);
	SET @Y = (SELECT COUNT(*) FROM DELETED);
	IF (@X > 0)
	BEGIN
		PRINT 'MODIFICARE CU SUCCES A ' + CONVERT(VARCHAR(20), @X) + ' INREGISTRARI';
	END;

	ELSE 
	BEGIN
		PRINT 'ELIMINARE CU SUCCES A ' + CONVERT(VARCHAR(20), @Y) + ' INREGISTRARI';
	END;


UPDATE PROD SET PRODUCATOR = 'K' WHERE MODEL_ID=1232 OR MODEL_ID=1233
DELETE PROD WHERE MODEL_ID=1121


--SA SE SCRIE UN TRIGGER CARE VA REACTIONA LA MODIFICAREA PRETULUI DIN TABELA PC--
--SI VA ANUNTA VALOAREA VECHE SI CEA NOUA A PRETULUI--

ALTER TRIGGER TR3 ON PC
AFTER UPDATE 
AS
	DECLARE @PRET_NOU FLOAT;
	DECLARE @PRET_VECHI FLOAT;

	IF (UPDATE(PRET))
	BEGIN
		SET @PRET_NOU = (SELECT PRET FROM INSERTED);
		SET @PRET_VECHI = (SELECT PRET FROM DELETED);
		PRINT 'A FOST MODIFICAT PRETUL DIN ' + CONVERT(VARCHAR(20), @PRET_VECHI) + ' LEI IN '
			  + CONVERT(VARCHAR(20), @PRET_NOU) + ' LEI'
	END;

UPDATE PC SET PRET = 6300 WHERE PC_ID = 3

--FORMAREA JURNALULUI DE LOGURI--

CREATE TABLE LOGG(LOG_ID INT PRIMARY KEY IDENTITY(1,1),
				  MODEL_ID INT, 
				  PRET FLOAT, 
				  VITEZA DECIMAL(4,0), 
				  DATA_EXEC DATETIME DEFAULT GETDATE())

ALTER TRIGGER TR4 ON PC
AFTER UPDATE 
AS
	DECLARE @PRET FLOAT;
	DECLARE @MODEL INT;
	DECLARE @VITEZA DECIMAL(4,0);
	
	SET @PRET = (SELECT PRET FROM DELETED);
	SET @MODEL = (SELECT MODEL_ID FROM DELETED);
	SET @VITEZA = (SELECT VITEZA FROM DELETED);

INSERT INTO LOGG(MODEL_ID, PRET, VITEZA) VALUES (@MODEL, @PRET, @VITEZA)

UPDATE PC SET PRET = 9600 WHERE PC_ID = 7
