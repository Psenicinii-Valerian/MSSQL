--1) Sa se gaseasca toti angajatii ce activeaza in Chisinau si primesc un salariu mai mic decat salariul minim--
WITH TEMP AS
(
	SELECT AN.ANGAJAT_ID, CONCAT(NUME,' ',PRENUME) AS NPP, R.DENUMIRE AS RAION,
		(SELECT SUM(SALARIU) FROM ANGAJARE A WHERE A.ANGAJAT_ID = AN.ANGAJAT_ID AND
		 DATA_ELIBERARII IS NULL) AS SALARIU_TOTAL
	FROM ANGAJAT AN INNER JOIN LOC_STR LS ON AN.LOC_STR_ID = LS.LOC_STR_ID
					INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
					INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID
	GROUP BY AN.ANGAJAT_ID, CONCAT(NUME,' ',PRENUME), R.DENUMIRE
		HAVING (SELECT SUM(SALARIU) FROM ANGAJARE A WHERE A.ANGAJAT_ID = AN.ANGAJAT_ID AND
				DATA_ELIBERARII IS NULL) IS NOT NULL
)

SELECT * FROM TEMP WHERE TEMP.SALARIU_TOTAL > (SELECT MIN(SALARIU_TOTAL) FROM TEMP) AND TEMP.RAION = 'CRIULENI'


--2) Scrie o interogare pentru a obtine angajatii cu venitul mai mare decat media aritmetica a salariilor--
--	 din departamentul IT--

WITH TEMP AS
(
	SELECT AN.ANGAJAT_ID, CONCAT(NUME,' ',PRENUME) AS NPP,
		(SELECT SUM(SALARIU) FROM ANGAJARE A WHERE A.ANGAJAT_ID = AN.ANGAJAT_ID AND
		 DATA_ELIBERARII IS NULL) AS SALARIU_TOTAL
	FROM ANGAJAT AN
)

SELECT * FROM TEMP WHERE TEMP.SALARIU_TOTAL > (SELECT AVG(SALARIU) FROM ANGAJARE AN 
											   INNER JOIN DEPARTAMENT D ON D.DEPARTAMENT_ID = AN.DEPARTAMENT_ID
											   WHERE DENUMIRE_DEPART = 'IT' AND DATA_ELIBERARII IS NULL)


--3) Scrie o interogare pentru a obtine functiile cele mai solicitate--
WITH TEMP AS
(
	SELECT FUNCTIE_ID, DENUMIRE_FUNCTIE, 
		(SELECT COUNT(FUNCTIE_ID) FROM ANGAJARE A WHERE A.FUNCTIE_ID = F.FUNCTIE_ID
			AND DATA_ELIBERARII IS NULL) AS NR_FUNCTII
	FROM FUNCTIE F 
)
--SELECT * FROM TEMP WHERE TEMP.NR_FUNCTII > 0
SELECT * FROM TEMP WHERE TEMP.NR_FUNCTII = (SELECT MAX(NR_FUNCTII) FROM TEMP)
ORDER BY TEMP.NR_FUNCTII DESC


--4) Scrie o interogare pentru a obtine datele angajatului (fnp, data angajarii, functie, salariu) care primeste-- 
--	 un salariu mai mare ca angajatilor din departamentul "IT" din Chisinau--

WITH TEMP AS
(
	SELECT AN.ANGAJAT_ID, CONCAT(NUME,' ',PRENUME) AS NPP, DATA_ANGAJARII, DENUMIRE_FUNCTIE, SALARIU,
		(SELECT SUM(SALARIU) FROM ANGAJARE A WHERE A.ANGAJAT_ID = AN.ANGAJAT_ID AND
		 DATA_ELIBERARII IS NULL) AS SALARIU_TOTAL
	FROM ANGAJAT AN INNER JOIN ANGAJARE A ON A.ANGAJAT_ID = AN.ANGAJAT_ID
					INNER JOIN FUNCTIE F ON F.FUNCTIE_ID = A.FUNCTIE_ID
)

SELECT * FROM TEMP WHERE TEMP.SALARIU_TOTAL > (SELECT SUM(TT.SUMA) FROM
	(
		SELECT AN.ANGAJAT_ID, DENUMIRE_DEPART, R.DENUMIRE,
			(SELECT SUM(SALARIU) FROM ANGAJARE A WHERE A.ANGAJAT_ID = AN.ANGAJAT_ID AND DATA_ELIBERARII IS NULL) AS SUMA
		FROM ANGAJAT AN INNER JOIN LOC_STR LS ON AN.LOC_STR_ID = LS.LOC_STR_ID
						INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
						INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID
						INNER JOIN ANGAJARE A ON A.ANGAJAT_ID = AN.ANGAJAT_ID
						INNER JOIN DEPARTAMENT D ON D.DEPARTAMENT_ID = A.DEPARTAMENT_ID
		GROUP BY AN.ANGAJAT_ID, DENUMIRE_DEPART, R.DENUMIRE
			HAVING (SELECT SUM(SALARIU) FROM ANGAJARE A WHERE A.ANGAJAT_ID = AN.ANGAJAT_ID AND DATA_ELIBERARII IS NULL) IS NOT NULL
				AND DENUMIRE_DEPART = 'IT' AND R.DENUMIRE = 'TARACLIA'
	) TT)


--5) Scrieti interogarea care va afisa pe raioane numarul de angajati, salariul total achitat brut si salariul achitat - 26%--
SELECT R.DENUMIRE,
	(SELECT COUNT(*) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON A.ANGAJAT_ID = AN.ANGAJAT_ID
									 INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
									 INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
									 INNER JOIN RAION RR ON RR.RAION_ID = L.RAION_ID
	 WHERE RR.DENUMIRE = R.DENUMIRE AND DATA_ELIBERARII IS NULL) AS NR_ANGAJATI_RAION,

	(SELECT SUM(SALARIU) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON A.ANGAJAT_ID = AN.ANGAJAT_ID
									 INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
									 INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
									 INNER JOIN RAION RR ON RR.RAION_ID = L.RAION_ID
	 WHERE RR.DENUMIRE = R.DENUMIRE AND DATA_ELIBERARII IS NULL) AS SUMA_SALARIU_BRUT,

	(SELECT SUM(SALARIU+BONUS_SALARIU-PENALITATI_SALARIU)*0.74 FROM ANGAJARE A INNER JOIN ANGAJAT AN ON A.ANGAJAT_ID = AN.ANGAJAT_ID
									 INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
									 INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
									 INNER JOIN RAION RR ON RR.RAION_ID = L.RAION_ID
	 WHERE RR.DENUMIRE = R.DENUMIRE AND DATA_ELIBERARII IS NULL) AS SALARIU_ACHITAT						 	

FROM RAION R

GROUP BY R.DENUMIRE
	HAVING 	(SELECT COUNT(*) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON A.ANGAJAT_ID = AN.ANGAJAT_ID
									 INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
									 INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
									 INNER JOIN RAION RR ON RR.RAION_ID = L.RAION_ID
	 WHERE RR.DENUMIRE = R.DENUMIRE AND DATA_ELIBERARII IS NULL) > 0

ORDER BY NR_ANGAJATI_RAION DESC
 

 --6) Scrie o interogare pentru a obtine datele angajatului (FNP, data angajarii, functie) ce nu activeaza ca programator--
 --   in Chisinau--

 SELECT A.ANGAJAT_ID, CONCAT(NUME, ' ', PRENUME) AS FNP, DATA_ANGAJARII, F.DENUMIRE_FUNCTIE

 FROM ANGAJARE A INNER JOIN ANGAJAT AN ON A.ANGAJAT_ID = AN.ANGAJAT_ID
				 INNER JOIN FUNCTIE F ON F.FUNCTIE_ID = A.FUNCTIE_ID

 WHERE DATA_ELIBERARII IS NULL

GROUP BY A.ANGAJAT_ID, CONCAT(NUME, ' ', PRENUME), DATA_ANGAJARII, F.DENUMIRE_FUNCTIE
	HAVING (SELECT COUNT(DENUMIRE_FUNCTIE) AS NR FROM FUNCTIE FF
												 INNER JOIN ANGAJARE AA ON AA.FUNCTIE_ID = FF.FUNCTIE_ID
												 INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = AA.ANGAJAT_ID
												 INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
												 INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
												 INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID		
		WHERE FF.DENUMIRE_FUNCTIE = F.DENUMIRE_FUNCTIE AND AA.ANGAJAT_ID = A.ANGAJAT_ID AND
			F.DENUMIRE_FUNCTIE = 'PROGRAMATOR'
			GROUP BY DENUMIRE_FUNCTIE, R.DENUMIRE
				HAVING R.DENUMIRE = 'TELENESTI') IS NULL


--7) Scrie o interogare pentru a obtine datele statistice (raion, nr. departamente, nr. total angajati, nr. de unitati ??? --
--   suma salariilor--

SELECT R.RAION_ID, R.DENUMIRE,
	(SELECT COUNT(DISTINCT(DENUMIRE_DEPART)) FROM DEPARTAMENT D INNER JOIN ANGAJARE A ON D.DEPARTAMENT_ID = A.DEPARTAMENT_ID
										INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
									    INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
									    INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
									    INNER JOIN RAION RR ON RR.RAION_ID = L.RAION_ID
	  WHERE RR.RAION_ID = R.RAION_ID ) AS NR_DEPARTAMENTE, 

	(SELECT COUNT(DISTINCT(A.ANGAJAT_ID)) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
									  INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
									  INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
									  INNER JOIN RAION RR ON RR.RAION_ID = L.RAION_ID
	  WHERE RR.RAION_ID = R.RAION_ID AND DATA_ELIBERARII IS NULL) AS NR_ANGAJATI

FROM RAION R
	GROUP BY R.RAION_ID, R.DENUMIRE
		HAVING (SELECT COUNT(DISTINCT(DENUMIRE_DEPART)) FROM DEPARTAMENT D INNER JOIN ANGAJARE A ON D.DEPARTAMENT_ID = A.DEPARTAMENT_ID
										INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
									    INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
									    INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
									    INNER JOIN RAION RR ON RR.RAION_ID = L.RAION_ID
				 WHERE RR.RAION_ID = R.RAION_ID ) > 0


--8) Scrie o interogare ce va afisa NPP cu majuscule, media salariilor neafiliate la functia pe care o detine la moment--

SELECT AN.ANGAJAT_ID, UPPER ( CONCAT(NUME, ' ', PRENUME) ) AS NPP, 
	(SELECT AVG(SALARIU) FROM ANGAJARE A WHERE A.ANGAJAT_ID = AN.ANGAJAT_ID 
	 AND DATA_ELIBERARII IS NOT NULL) AS MEDIA_SALARIU_NEAFILIAT
FROM ANGAJAT AN
GROUP BY AN.ANGAJAT_ID, UPPER ( CONCAT(NUME, ' ', PRENUME) )
	HAVING 	(SELECT AVG(SALARIU) FROM ANGAJARE A WHERE A.ANGAJAT_ID = AN.ANGAJAT_ID 
	 AND DATA_ELIBERARII IS NOT NULL) IS NOT NULL


--9) Scrie o interogare pentru a obtine angajatii ce muncesc in Cantemir si nu detin email sau numar de telefon de la--
--	 operatorul Orange--

SELECT AN.ANGAJAT_ID, CONCAT(NUME, ' ', PRENUME) AS NPP, R.DENUMIRE, A.CONTRACTE
FROM ANGAJAT AN INNER JOIN ANGAJARE A ON AN.ANGAJAT_ID = A.ANGAJAT_ID
				INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
				INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
				INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID

WHERE R.DENUMIRE = 'CRIULENI'
GROUP BY AN.ANGAJAT_ID, CONCAT(NUME, ' ', PRENUME), R.DENUMIRE, A.CONTRACTE
	HAVING (SELECT COUNT(*) FROM ANGAJARE A 
				WHERE A.ANGAJAT_ID = AN.ANGAJAT_ID AND CONVERT(VARCHAR(20), A.CONTRACTE) LIKE '235%') = 0


--10) Sa se gaseasca angajatii ce au functii a caror cantitate de caractere nu este mai mare decat suma angajatilor din Briceni--	

WITH TEMP AS 
(
	SELECT COUNT(DISTINCT(A.ANGAJAT_ID)) AS SUMA FROM ANGAJARE A INNER JOIN ANGAJAT AN ON A.ANGAJAT_ID = AN.ANGAJAT_ID
										INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
										INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
										INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID
	WHERE R.DENUMIRE = 'TELENESTI'
)

SELECT AN.ANGAJAT_ID, LEN(F.DENUMIRE_FUNCTIE) AS LUNGIMEA_FUNCTIE, CONVERT(INT, (SELECT TEMP.SUMA FROM TEMP)) AS SUMA_ANGAJATILOR,
		CONCAT(NUME, ' ', PRENUME) AS NPP FROM ANGAJAT AN
													 INNER JOIN ANGAJARE A ON A.ANGAJAT_ID = AN.ANGAJAT_ID
													 INNER JOIN FUNCTIE F ON F.FUNCTIE_ID = A.FUNCTIE_ID
	WHERE LEN(F.DENUMIRE_FUNCTIE) <= CONVERT(INT, (SELECT TEMP.SUMA FROM TEMP))

--11) Sa se afiseze numarul de angajati si salariul mediu pentru fiecare raion. Aranjati informatia in ordine alfabetic dupa --
--    denumirea raionului --

SELECT R.RAION_ID, R.DENUMIRE,
	(SELECT COUNT(DISTINCT(A.ANGAJAT_ID)) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
														 INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
													     INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
														 INNER JOIN RAION RR ON RR.RAION_ID = L.RAION_ID	 
	 WHERE RR.RAION_ID = R.RAION_ID AND DATA_ELIBERARII IS NULL) AS NR_ANGAJATI,

	 (SELECT CONVERT( DECIMAL(10,2), AVG(SALARIU) ) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
										  INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
										  INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
										  INNER JOIN RAION RR ON RR.RAION_ID = L.RAION_ID	
	  WHERE RR.RAION_ID = R.RAION_ID AND DATA_ELIBERARII IS NULL) AS MEDIA_SALARIU

FROM RAION R

GROUP BY R.RAION_ID, R.DENUMIRE
	HAVING (SELECT COUNT(DISTINCT(A.ANGAJAT_ID)) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
														 INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
													     INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
														 INNER JOIN RAION RR ON RR.RAION_ID = L.RAION_ID	 
			 WHERE RR.RAION_ID = R.RAION_ID AND DATA_ELIBERARII IS NULL) > 0

ORDER BY DENUMIRE ASC


--12) Sa se afiseze toti angajatii pe raioane care au coincidenta intre parametrii adresei: nr. casei si nr. apartamentului--

SELECT ANGAJAT_ID, CONCAT(NUME, ' ', PRENUME) AS NPP, R.DENUMIRE

FROM ANGAJAT AN	INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
				INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
			    INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID	 
GROUP BY ANGAJAT_ID, CONCAT(NUME, ' ', PRENUME), R.DENUMIRE
	HAVING (SELECT COUNT(*) FROM ANGAJAT ANN WHERE ANN.ANGAJAT_ID = AN.ANGAJAT_ID AND BLOC = NR) > 0

--13) Sa se scrie o interogarea care va afisa angajatii pe departamente (departament, functia, FNP, salariul) --
--    ordonati dupa aceiasi parametri--

SELECT D.DEPARTAMENT_ID, DENUMIRE_DEPART, DENUMIRE_FUNCTIE, CONCAT(NUME, ' ', PRENUME) AS FNP, SALARIU
FROM DEPARTAMENT D INNER JOIN ANGAJARE A ON D.DEPARTAMENT_ID = A.DEPARTAMENT_ID
				   INNER JOIN FUNCTIE F ON F.FUNCTIE_ID = A.FUNCTIE_ID
				   INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
 GROUP BY D.DEPARTAMENT_ID, DENUMIRE_DEPART, DENUMIRE_FUNCTIE, CONCAT(NUME, ' ', PRENUME), SALARIU
 ORDER BY DENUMIRE_DEPART ASC
