--TEMA: FUNCTII DEFINITE DE UTILIZATOR--

--IN SQL SERVER SUNT 2 TIPURI DE FUNCTII: --
-- 1.FUNCTII SCALARE - CARE RETURNEAZA O SINGURA VALOARE--
-- 2.FUNCTII TABELARE - CARE RETURNEAZA O TABELA--

--FUNCTII SCALARE--
--SINTAXA FUNCTIEI SCALARE--
CREATE FUNCTION NUME_FUNCTIE( [LISTA_PARAMETRILOR] )
RETURNS TIP_DE_DATE_RETURNAT 
AS 
BEGIN
	INSTRUCTIUNI;
	RETURN VALOARE;
END;


--DECLARAREA UNEI VARIABILE IN T-SQL SE FACE PRIN UTILIZAREA SIMBOLULUI @--
--@NUME_VARIABILA TIP_DATE; --


--INTIALIZAREA UNEI VARIABILE SE FACE PRIN INTERMEDIUL CUVANTULUI "SET"--
--SET NUME_VARIABILA; --

--PENTRU FIECARE PRODUCATOR SA SE DETERMINE NR DE PRODUSE VANDUTE--

--METODA 1--
SELECT PRODUCATOR,
	(SELECT COUNT(*) FROM PRODUSE PP INNER JOIN PC ON PP.MODEL_ID = PC.MODEL_ID
		WHERE PP.PRODUCATOR = P.PRODUCATOR) AS NR_PROD

FROM PRODUSE P
GROUP BY PRODUCATOR

--METODA 2--
CREATE FUNCTION NR_PRODUSE(@PROD CHAR)
RETURNS INT
AS
BEGIN		
	DECLARE @REZ INT;
	SET @REZ = (SELECT COUNT(*) FROM PRODUSE PP INNER JOIN PC ON PP.MODEL_ID = PC.MODEL_ID
					WHERE PP.PRODUCATOR = @PROD);
	RETURN @REZ;
END;

SELECT P.PRODUCATOR, DBO.NR_PRODUSE(P.PRODUCATOR) AS NR_PROD
	FROM PRODUSE P
GROUP BY P.PRODUCATOR


--PENTRU FIECARE PRODUCATOR SA SE DETERMINE NR DE PIESE UNICALE DE FIECARE TIP--
SELECT P.PRODUCATOR, DBO.NR_PIESE(P.PRODUCATOR, 'PC') AS NR_PROD_PC,
					 DBO.NR_PIESE(P.PRODUCATOR, 'LAPTOP') AS NR_PROD_LAP,
					 DBO.NR_PIESE(P.PRODUCATOR, 'IMPRIMANTE') AS NR_PROD_IMP
	FROM PRODUSE P
GROUP BY P.PRODUCATOR

ALTER FUNCTION NR_PIESE(@PROD VARCHAR(2), @TIP VARCHAR(20))
RETURNS INT
AS
BEGIN
	DECLARE @REZ INT;

	IF(@TIP = 'PC')
	BEGIN
		SET @REZ = (SELECT COUNT(DISTINCT(PP.MODEL_ID)) 
					FROM PRODUSE PP INNER JOIN PC ON PP.MODEL_ID = PC.MODEL_ID 
						WHERE PP.PRODUCATOR = @PROD);
	END;

	ELSE IF(@TIP = 'LAPTOP')
	BEGIN
		SET @REZ = (SELECT COUNT(DISTINCT (PP.MODEL_ID) ) 
					FROM PRODUSE PP INNER JOIN LAPTOPURI L ON PP.MODEL_ID = L.MODEL_ID 
						WHERE PP.PRODUCATOR = @PROD);
	END;

	ELSE IF(@TIP = 'IMPRIMANTE')
	BEGIN
		SET @REZ = (SELECT COUNT(DISTINCT(PP.MODEL_ID)) 
					FROM PRODUSE PP INNER JOIN IMPRIMANTE I ON PP.MODEL_ID = I.MODEL_ID 
						WHERE PP.PRODUCATOR = @PROD);
	END;

	RETURN @REZ;

END;


--PENTRU FIECARE PRODUCATOR DE PC SA SE DETERMINE: --
--1) SUMA PRETULUI PRODUSELOR--
--2) MEDIA ARITMETICA A PRETURILOR--

SELECT P.PRODUCATOR, ISNULL (DBO.STAT(P.PRODUCATOR, 1), 0) AS SUMA_PRET,
					 ISNULL (DBO.STAT(P.PRODUCATOR, 2), 0) AS MED_PRET
FROM PRODUSE P
GROUP BY P.PRODUCATOR

ALTER FUNCTION STAT(@PROD VARCHAR(2), @PARAM INT)
RETURNS DECIMAL(9,2)
AS
BEGIN
	RETURN(SELECT IIF(@PARAM = 1, SUM(PRET), AVG(PRET))
		   FROM PRODUSE PP INNER JOIN PC ON PP.MODEL_ID = PC.MODEL_ID
		   WHERE PP.PRODUCATOR = @PROD);
END;

--SA SE CALCULEZE SUMA CIFRELOR CE FORMEAZA CAMPUL MODEL_ID DIN TABELA PROPUSA--
SELECT P.MODEL_ID, (DBO.SUMA(P.MODEL_ID, 1) + DBO.SUMA(P.MODEL_ID, 2) +
				    DBO.SUMA(P.MODEL_ID, 3) + DBO.SUMA(P.MODEL_ID, 4)) AS SUMA_CIFRELOR					
FROM PRODUSE P

CREATE FUNCTION SUMA(@MODEL VARCHAR(5), @PARAM INT)
RETURNS INT
AS
BEGIN
	RETURN( SELECT SUBSTRING( @MODEL, @PARAM, 1 ) );
END;

--SA SE DETERMINE PRODUCATORII LA CARE PRIMUL SIMBOL DIN MODEL_ID ESTE PAR SI ULTIMUL SIMBOL ESTE IMPAR--
--SI PRIMUL ESTE MAI MIC DECAT ULTIMUL--
SELECT P.PRODUCATOR, MODEL_ID FROM PRODUSE P
WHERE (DBO.SUMA(P.MODEL_ID, 1) % 2 = 1) AND (DBO.SUMA(P.MODEL_ID, LEN(MODEL_ID)) % 2 = 0) AND
	  (DBO.SUMA(P.MODEL_ID, 1) < DBO.SUMA(P.MODEL_ID, LEN(MODEL_ID) ) )
ORDER BY P.PRODUCATOR

--PENTRU FIECARE RAION SA SE DETERMINE: --
--1) NUMARUL TOTAL DE PERSOANE--
--2) RAPORTUL DINTRE NR BARB/NR FEMEI: 20(B) / 13(F) --
--3) SUMA SALARIULUI ACHITAT BRUT--
--4) SUMA SALARIULUI ACHITAT NET--

SELECT R.RAION_ID, R.DENUMIRE, DBO.RAIONN(R.RAION_ID, 1) AS NR_PERS,
							   DBO.RAIONN(R.RAION_ID, 2) AS RAPORT,
							   DBO.RAIONN(R.RAION_ID, 3) AS SUMA_BRUT,
							   CONVERT( FLOAT, DBO.RAIONN(R.RAION_ID, 3) ) * 0.8 AS SUMA_NET	  
FROM RAION R
WHERE  DBO.RAIONN(R.RAION_ID, 1) > 0

ALTER FUNCTION RAIONN(@RAION INT, @PARAM INT)
RETURNS VARCHAR(100)
AS
BEGIN
	DECLARE @W VARCHAR(20);
	DECLARE @M INT;
	DECLARE @F INT;

	--1 TASK--
	IF (@PARAM = 1)
	BEGIN
		SET @W = (SELECT COUNT(*) FROM ANGAJAT AN INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
											      INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
											      INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID
				  WHERE R.RAION_ID  = @RAION );
	END;

	--2 TASK--
	ELSE IF (@PARAM = 2)
	BEGIN
		SET @M = (SELECT COUNT(*) FROM ANGAJAT AN INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
												  INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
												  INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID
					WHERE R.RAION_ID  = @RAION  AND GEN = 1 );

		SET @F =  (SELECT COUNT(*) FROM ANGAJAT AN INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
											       INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
											       INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID
					WHERE R.RAION_ID  = @RAION  AND GEN = 0 );

		SET @W = CONCAT (@M, ' (B)', ' / ', @F, ' (F)');
	END;

	--3 TASK--
	ELSE IF (@PARAM = 3)
	BEGIN
	SET @W = (SELECT SUM(SALARIU) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
												  INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
												  INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
												  INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID
					WHERE R.RAION_ID  = @RAION);
	END;

	RETURN @W;
END;
 