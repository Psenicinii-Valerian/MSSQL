--1) Sa se gaseasca toti angajatii ce activeaza in Chisinau si primesc un salariu mai mic decat salariul minim--
SELECT AN.ANGAJAT_ID, CONCAT(NUME, ' ',PRENUME) AS NPP, DBO.F1(AN.ANGAJAT_ID) AS SALARIU
FROM ANGAJAT AN
WHERE DBO.F1(AN.ANGAJAT_ID) > (SELECT MIN(SALARIU) FROM ANGAJARE)

ALTER FUNCTION F1(@ID INT)
RETURNS DECIMAL(8, 2)
AS 
BEGIN
DECLARE @S DECIMAL(8, 2);
	SET @S = (SELECT SUM(SALARIU) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
												  INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
												  INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
				WHERE AN.ANGAJAT_ID = @ID AND L.RAION_ID = 2 AND DATA_ELIBERARII IS NULL);			
	RETURN @S;
END;

--2) Scrie o interogare pentru a obtine angajatii cu venitul mai mare decat media aritmetica a salariilor--
--	 din departamentul IT--
SELECT AN.ANGAJAT_ID, DBO.F2(AN.ANGAJAT_ID) AS NPP
FROM ANGAJAT AN 
WHERE DBO.F2(AN.ANGAJAT_ID) IS NOT NULL

ALTER FUNCTION F2(@ID INT)
RETURNS VARCHAR(30)
AS
BEGIN
DECLARE @SS INT;
DECLARE @AS INT;
DECLARE @NPP VARCHAR(30);
	SET @SS = (SELECT SUM(SALARIU) FROM ANGAJARE A WHERE A.ANGAJAT_ID = @ID AND
				DATA_ELIBERARII IS NULL);

	SET @AS = (SELECT AVG(SALARIU) FROM ANGAJARE AN 
								   INNER JOIN DEPARTAMENT D ON D.DEPARTAMENT_ID = AN.DEPARTAMENT_ID
				WHERE DENUMIRE_DEPART = 'IT' AND DATA_ELIBERARII IS NULL);

	SET @NPP = (SELECT CONCAT(NUME, ' ', PRENUME) FROM ANGAJAT AN
				WHERE AN.ANGAJAT_ID = @ID AND @SS > @AS);

	RETURN @NPP;
END;

--3) Scrie o interogare pentru a obtine functiile cele mai solicitate--
WITH TEMP AS
(
	SELECT FUNCTIE_ID, DENUMIRE_FUNCTIE, DBO.F3(FUNCTIE_ID) AS NR_FUNCTII
	FROM FUNCTIE 
	WHERE DBO.F3(FUNCTIE_ID) > 0
)

SELECT * FROM TEMP WHERE TEMP.NR_FUNCTII = (SELECT MAX(NR_FUNCTII) FROM TEMP)

ALTER FUNCTION F3(@ID INT)
RETURNS INT
AS
BEGIN
RETURN (SELECT COUNT(FUNCTIE_ID) FROM ANGAJARE A WHERE A.FUNCTIE_ID = @ID
				  AND DATA_ELIBERARII IS NULL);
END;

--4) Scrie o interogare pentru a obtine datele angajatului (fnp, data angajarii, functie, salariu) care primeste-- 
--	 un salariu mai mare ca angajatilor din departamentul "IT" din Chisinau--
SELECT CONCAT(NUME, ' ', PRENUME) AS FNP, DATA_ANGAJARII, DENUMIRE_FUNCTIE, 
	   SALARIU FROM ANGAJARE A 
			   INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
			   INNER JOIN FUNCTIE F ON F.FUNCTIE_ID = A.FUNCTIE_ID
WHERE DBO.F4(A.ANGAJAT_ID, 2) >  ISNULL(DBO.F4(A.ANGAJAT_ID, 1), 0)

ALTER FUNCTION F4(@ID INT, @PARAM INT)
RETURNS INT
AS
BEGIN
	DECLARE @W INT;

	IF (@PARAM = 1)
	BEGIN
		SET @W = (SELECT SUM(SALARIU) FROM ANGAJARE A INNER JOIN DEPARTAMENT D ON D.DEPARTAMENT_ID = A.DEPARTAMENT_ID
													INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
													INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
													INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
													INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID
		WHERE A.ANGAJAT_ID = @ID AND DATA_ELIBERARII IS NULL AND R.DENUMIRE = 'CRIULENI' AND D.DENUMIRE_DEPART = 'IT' );
	END;

	ELSE IF(@PARAM = 2)
	BEGIN
		SET @W = (SELECT SUM(SALARIU) FROM ANGAJARE A WHERE A.ANGAJAT_ID = @ID);
	END;

	RETURN @W;
	
END;

--5) Scrieti interogarea care va afisa pe raioane numarul de angajati, salariul total achitat brut si salariul achitat - 26%--
SELECT RAION_ID, DBO.F5(RAION_ID, 1) AS NR_ANGAJATI,
				 DBO.F5(RAION_ID, 2) AS SALARIU_BRUT,
				 DBO.F5(RAION_ID, 3) AS SALARIU_NET		
FROM RAION
ORDER BY  DBO.F5(RAION_ID, 1) DESC

ALTER FUNCTION F5(@ID INT, @PARAM INT)
RETURNS DECIMAL(8,2)
AS
BEGIN
	DECLARE @W INT;
	
	IF(@PARAM = 1)
	BEGIN
		SET @W = (SELECT COUNT(*) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
												      INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
													  INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
			      WHERE L.RAION_ID = @ID AND DATA_ELIBERARII IS NULL);
	END;

	ELSE IF(@PARAM = 2)
	BEGIN
		SET @W = (SELECT SUM(SALARIU) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
												      INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
													  INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
			      WHERE L.RAION_ID = @ID AND DATA_ELIBERARII IS NULL);
	END;

	ELSE IF(@PARAM = 3)
	BEGIN
		SET @W = (SELECT SUM(SALARIU) * 0.84 FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
												      INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
													  INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
			      WHERE L.RAION_ID = @ID AND DATA_ELIBERARII IS NULL);
	END;

	RETURN @W;

END;

--6) Scrie o interogare pentru a obtine datele angajatului (FNP, data angajarii, functie) ce nu activeaza ca programator--
--   in Chisinau--
SELECT CONCAT(NUME, ' ', PRENUME) AS FNP, DATA_ANGAJARII, DENUMIRE_FUNCTIE

FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
				INNER JOIN FUNCTIE F ON F.FUNCTIE_ID = A.FUNCTIE_ID

WHERE DBO.F6(A.ANGAJAT_ID) = 0 AND DATA_ELIBERARII IS NULL
GROUP BY CONCAT(NUME, ' ', PRENUME), DATA_ANGAJARII, DENUMIRE_FUNCTIE

ALTER FUNCTION F6(@ID INT)
RETURNS INT
AS
BEGIN
	RETURN (SELECT COUNT(*) FROM ANGAJARE A INNER JOIN FUNCTIE F ON F.FUNCTIE_ID = A.FUNCTIE_ID
											INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
											INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
											INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
											INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID
			WHERE R.RAION_ID = @ID AND DATA_ELIBERARII IS NULL AND F.DENUMIRE_FUNCTIE = 'PROGRAMATOR' 
				  AND R.DENUMIRE = 'TELENESTI')
END;

--7) Scrie o interogare pentru a obtine datele statistice (raion, nr. departamente, nr. total angajati, nr. de unitati ??? --
--   suma salariilor--
SELECT R.RAION_ID, R.DENUMIRE, DBO.F7(RAION_ID, 1) AS NR_DEPARTAMENTE,
							   DBO.F7(RAION_ID, 2) AS NR_TOTAL_ANGAJATI,
							   DBO.F7(RAION_ID, 3) AS SUMA_SALARIILOR
FROM RAION R
WHERE DBO.F7(RAION_ID, 1) > 0

CREATE FUNCTION F7(@ID INT, @PARAM INT)
RETURNS INT
AS
BEGIN
	DECLARE @W INT;
	IF(@PARAM = 1)
	BEGIN
		SET @W = (SELECT COUNT(DISTINCT(DENUMIRE_DEPART)) FROM ANGAJARE A INNER JOIN DEPARTAMENT D ON D.DEPARTAMENT_ID = A.DEPARTAMENT_ID
																		  INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
																		  INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
																		  INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
				  WHERE L.RAION_ID = @ID);
	END;

	ELSE IF(@PARAM = 2)
	BEGIN
		SET @W = (SELECT COUNT(DISTINCT(A.ANGAJAT_ID)) FROM ANGAJARE A INNER JOIN DEPARTAMENT D ON D.DEPARTAMENT_ID = A.DEPARTAMENT_ID
																	   INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
																	   INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
																	   INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
				  WHERE L.RAION_ID = @ID);
	END;

	ELSE IF(@PARAM = 3)
	BEGIN
		SET @W = (SELECT SUM(SALARIU) FROM ANGAJARE A INNER JOIN DEPARTAMENT D ON D.DEPARTAMENT_ID = A.DEPARTAMENT_ID
													  INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
													  INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
													  INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
				  WHERE L.RAION_ID = @ID);
	END;

	RETURN @W;

END;

--8) Scrie o interogare ce va afisa NPP cu majuscule, media salariilor neafiliate la functia pe care o detine la moment--
SELECT UPPER(CONCAT(NUME, ' ', PRENUME)) AS NPP, DBO.F8(A.ANGAJAT_ID) AS MEDIA_SAL
FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJARE_ID
WHERE DATA_ELIBERARII IS NULL

ALTER FUNCTION F8(@ID INT)
RETURNS DECIMAL(8,2)
AS
BEGIN
	RETURN (SELECT AVG(SALARIU) FROM ANGAJARE A WHERE DATA_ELIBERARII IS NULL AND A.FUNCTIE_ID NOT IN 
				(SELECT FUNCTIE_ID FROM ANGAJARE WHERE A.ANGAJAT_ID = @ID AND DATA_ELIBERARII IS NULL) );
	
END;

--9) Scrie o interogare pentru a obtine angajatii ce muncesc in Criuleni si nu au codul contractului ce se incepe cu 235--
SELECT CONCAT(NUME, ' ', PRENUME) AS NPP
FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
				INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
				INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
				INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID
WHERE R.DENUMIRE = 'CRIULENI' AND DBO.F9(A.ANGAJAT_ID) > 0
GROUP BY CONCAT(NUME, ' ', PRENUME)

ALTER FUNCTION F9(@ID INT)
RETURNS INT
AS
BEGIN
	RETURN (SELECT COUNT(*) FROM ANGAJARE A WHERE A.ANGAJAT_ID = @ID AND A.CONTRACTE NOT LIKE '235%');
END;

--10) Sa se gaseasca angajatii ce au functii a caror cantitate de caractere nu este mai mare decat suma angajatilor din Telenesti--	
SELECT CONCAT(NUME, ' ', PRENUME) AS NPP
FROM ANGAJAT AN
WHERE DBO.F10(AN.ANGAJAT_ID, 2) <= DBO.F10(AN.ANGAJAT_ID, 1)

ALTER FUNCTION F10(@ID INT, @PARAM INT)
RETURNS INT
AS
BEGIN
	DECLARE @W INT;

	IF(@PARAM = 1)
	BEGIN
	SET @W = (SELECT SUM(SALARIU) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
												INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
												INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
												INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID
								WHERE A.ANGAJAT_ID = @ID AND R.DENUMIRE = 'TELENESTI' AND DATA_ELIBERARII IS NULL);
	END;

	ELSE IF(@PARAM = 2)
	BEGIN
	SET @W = (SELECT SUM(LEN(DENUMIRE_FUNCTIE)) FROM ANGAJARE A INNER JOIN FUNCTIE F ON F.FUNCTIE_ID = A.FUNCTIE_ID
			  WHERE A.ANGAJAT_ID = @ID AND DATA_ELIBERARII IS NULL);
	END;

	RETURN @W;

END;

--11) Sa se afiseze numarul de angajati si salariul mediu pentru fiecare raion. Aranjati informatia in ordine alfabetic dupa --
--    denumirea raionului --
SELECT R.RAION_ID, R.DENUMIRE, DBO.F11(RAION_ID) AS NR_ANGAJATI,
							   DBO.F112(RAION_ID) AS SALARIU_MEDIU
FROM RAION R
WHERE DBO.F11(RAION_ID) > 0
ORDER BY R.DENUMIRE

CREATE FUNCTION F11(@ID INT)
RETURNS INT
AS 
BEGIN
	RETURN (SELECT COUNT(*) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
											INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
											INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
			WHERE L.RAION_ID = @ID)
END;

ALTER FUNCTION F112(@ID INT)
RETURNS DECIMAL(8,2)
AS 
BEGIN
	RETURN (SELECT AVG(SALARIU) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
											    INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.ANGAJAT_ID
											    INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
			WHERE L.RAION_ID = @ID)
END;

--12) Sa se afiseze toti angajatii care au coincidenta intre parametrii adresei: nr. casei si nr. apartamentului--
SELECT R.RAION_ID, R.DENUMIRE, CONCAT(NUME, ' ', PRENUME) AS NPP

FROM ANGAJAT AN INNER JOIN LOC_STR LS ON LS.LOC_STR_ID = AN.LOC_STR_ID
				INNER JOIN LOCALITATE L ON L.LOCALITATE_ID = LS.LOCALITATE_ID
				INNER JOIN RAION R ON R.RAION_ID = L.RAION_ID

WHERE AN.NR IN (SELECT NR FROM DBO.F121(AN.NR)) AND AN.BLOC IN (SELECT BLOC FROM DBO.F122(AN.BLOC))

GROUP BY R.RAION_ID, R.DENUMIRE, CONCAT(NUME, ' ', PRENUME)


ALTER FUNCTION F121(@NR VARCHAR(5))
RETURNS TABLE
AS  
	RETURN (SELECT NR FROM
		   (
				SELECT AN.NR, AN.BLOC FROM ANGAJAT AN 
				WHERE AN.NR = @NR  
				GROUP BY AN.NR, AN.BLOC
					HAVING COUNT(*) > 1
			) TT )

ALTER FUNCTION F122(@BLOC VARCHAR(5))
RETURNS TABLE
AS  
	RETURN (SELECT BLOC FROM
		   (
				SELECT AN.NR, AN.BLOC FROM ANGAJAT AN 
				WHERE AN.BLOC = @BLOC
				GROUP BY AN.NR, AN.BLOC
					HAVING COUNT(*) > 1
		   ) TT )

--13) Sa se scrie o interogarea care va afisa angajatii pe departamente (departament, functia, FNP, salariul) --
--    ordonati dupa aceiasi parametri--
SELECT * FROM DBO.F13()
ORDER BY DENUMIRE_DEPART ASC

CREATE FUNCTION F13()
RETURNS TABLE
AS
	RETURN 
	(
		SELECT DENUMIRE_DEPART, DENUMIRE_FUNCTIE, CONCAT(NUME, ' ', PRENUME) AS NPP, SUM(SALARIU) AS SALARIU
		FROM ANGAJARE A INNER JOIN ANGAJAT AN ON AN.ANGAJAT_ID = A.ANGAJAT_ID
						INNER JOIN DEPARTAMENT D ON D.DEPARTAMENT_ID = A.DEPARTAMENT_ID
						INNER JOIN FUNCTIE F ON F.FUNCTIE_ID = A.FUNCTIE_ID
		GROUP BY DENUMIRE_DEPART, DENUMIRE_FUNCTIE, CONCAT(NUME, ' ', PRENUME)
	)
