--STUDIUL UNION, EXCEPT, INTERSECT--
/*
	UNION - instructiune ce unifica rezultatele a 2 sau mai multe interogari 

	SINTAXA utilizarii union: 
	select campuri from tabele where conditii...
	UNION[all]
	select campuri from tabele

	Union poate fi utilizat in 2 moduri:
	1. union (curat) - union (la etapa data se elimina toate repetarile din rezultat)
	2. union all - la etapa data se afiseaza toate raspunsurile din cadrul interogarilor

	PROPRIETATILE COMUNE PENTRU UNION, EXCEPT SI INTERSECT:
	1) Numarul de campuri ale ambelor selecturi trebuie sa fie egal
	2) Tipul de date a ambelor selecturi trebuie sa fie identic
	NOTA: Tabela rezultat(virtuala)va lua ca denumiri de campuri denumirile campurilor primului select
*/

USE DEPOZIT

SELECT 1 AS NR, MODEL_ID AS MODEL,PRET, CD, RAM, 'PC' AS TIP FROM PC
UNION 
SELECT 2, VITEZA AS XXX, PRET AS PRET, '-', RAM, 'LAPTOPURI' FROM LAPTOPURI
UNION 
SELECT 3, MODEL_ID, PRET, '-', 0, 'IMPRIMANTE' FROM IMPRIMANTE

--SA SE DETERMINE PRODUCATORII SI PRETURILE PRODUSELOR--

SELECT 'IMPRIMANTE' AS TIP, PRODUCATOR, PRET FROM PRODUSE P INNER JOIN IMPRIMANTE I ON P.MODEL_ID = I.MODEL_ID
UNION
SELECT 'LAPTOPURI', PRODUCATOR, PRET FROM PRODUSE P INNER JOIN LAPTOPURI L ON P.MODEL_ID = L.MODEL_ID
UNION
SELECT 'PC', PRODUCATOR, PRET FROM PRODUSE P INNER JOIN PC ON P.MODEL_ID = PC.MODEL_ID

--SA SE DETERMINE PENTRU FIECARE ANGAJAT--
--1) DACA E BARBAT SA SE CALCULEZE ANUL NASTERII - LUNA NASTERII - ZIUA NASTERII--
--2) DACA E FEMEIE SA SE CALCULZE ANUL NASTERII + LUNA NASTERII + ZIUA NASTERII--

USE ANGAJAT

SELECT 'BARBAT' AS GEN, CONCAT(NUME, ' ', PRENUME) AS NPP, DATA_NAST, 
YEAR(DATA_NAST) - MONTH(DATA_NAST) - DAY(DATA_NAST) AS CALCUL
FROM ANGAJAT
WHERE GEN = 1 
	UNION
SELECT 'FEMEIE', CONCAT(NUME, ' ', PRENUME) AS NPP, DATA_NAST, 
YEAR(DATA_NAST) + MONTH(DATA_NAST) + DAY(DATA_NAST) AS CALCUL
FROM ANGAJAT
WHERE GEN = 0 

--INTERSECT - ARATA VALORILE COMUNE ALE AMBELOR SELECTURI--

--SA SE DETERMINE PRETURILE COMUNE ALE PRODUSELOR--
USE DEPOZIT
SELECT PRET AS PRET_MOD FROM PC
INTERSECT
SELECT PRET FROM LAPTOPURI
INTERSECT
SELECT PRET FROM IMPRIMANTE

--SA SE DETERMINE PRODUSELE DE PC SI LAPTOPURI CU PARAMETRII EGALI--
SELECT VITEZA FROM PC
INTERSECT 
SELECT VITEZA FROM LAPTOPURI

--SA SE DETERMINE NUMELE COMUN PENTRU BARBATI SI FEMEI--
USE ANGAJAT
SELECT NUME FROM ANGAJAT
WHERE GEN = 1
	INTERSECT
SELECT NUME FROM ANGAJAT
WHERE GEN = 0

SELECT * FROM ANGAJAT WHERE NUME IN('COTOROBAI', 'COVALI', 'RUSU')
	ORDER BY NUME

--EXCEPT - ARATA ACEA INFORMATIE DIN SELECTUL 1 CARE NU ESTE REGASITA IN SELECTUL 2--

USE DEPOZIT
SELECT PRET FROM PC	
	EXCEPT
SELECT PRET FROM LAPTOPURI

--SA SE DETERMINE PRODUCATORII CE PRODUC PC SI LAPTOPURI DAR NU PRODUC IMPRIMANTE--
SELECT PRODUCATOR FROM PRODUSE P INNER JOIN LAPTOPURI L ON P.MODEL_ID = L.MODEL_ID
	INTERSECT
SELECT PRODUCATOR FROM PRODUSE P INNER JOIN PC ON P.MODEL_ID = PC.MODEL_ID
	EXCEPT 
SELECT PRODUCATOR FROM PRODUSE P INNER JOIN IMPRIMANTE I ON P.MODEL_ID = I.MODEL_ID

--VARIANTA 2--
SELECT PRODUCATOR FROM PRODUSE
WHERE TIP LIKE 'L%' OR TIP LIKE 'PC' OR TIP NOT LIKE 'IMP%'
GROUP BY PRODUCATOR
HAVING COUNT(TIP)=2
ORDER BY PRODUCATOR

--STUDIUL INSTRUCTIUNII IF--
--IIF (CONDITIA, VALOAREA_DE_ADEVAR, VALOAREA_FALS)--

USE ANGAJAT
SELECT NUME, PRENUME, GEN, IIF(GEN=1, 'MASCULIN', 'FEMININ') AS GEN_TIP FROM ANGAJAT

--PENTRU FIECARE PRET AL PC-ULUI SA SE GRUPEZE IN 3 CATEGORII: --
--1) DACA PRETUL < 4000 LEI SA FIE CATEGORIA ECONOM--
--2) DACA PRETUL > 4000 SI PRETUL < 7000 LEI SA FIE CATEGORIA BUSINESS--
--3) DACA PRETUL > 7000 LEI SA FIE CATEGORIA PREMIUM--

USE DEPOZIT

--VARIANTA 1--
SELECT *, IIF(PRET < 4000, 'ECONOM', IIF(PRET < 7000, 'BUSINESS', 'PREMIUM') ) AS CLASA FROM PC

--VARIANTA 2--
SELECT *, IIF(PRET < 7000, IIF(PRET<4000, 'ECONOM','BUSSINES'), 'PREMIUM') AS CATEGORIE FROM PC

--SA SE CALCULEZE VARSTA DEPLINA A ANGAJATILOR (ANI, LUNI, ZILE)--			
USE ANGAJAT
SELECT  CONCAT ( NUME, ' ', PRENUME) AS NUME_PRENUME,
		CONCAT ( CONVERT( VARCHAR(3),  IIF( (DAY( GETDATE() ) - DAY(DATA_NAST) ) > 0,  DAY( GETDATE() ) - DAY(DATA_NAST),  
			     DAY(DATA_NAST) - DAY( GETDATE() ) ) ), ' ZILE, ',

				 CONVERT( VARCHAR(3), IIF( (MONTH( GETDATE() ) - MONTH(DATA_NAST) ) > 0 AND 
										 (  DAY( GETDATE() ) - DAY(DATA_NAST) ) > 0,  MONTH( GETDATE() ) - DAY(DATA_NAST),  
			     MONTH(DATA_NAST) - MONTH( GETDATE() ) -1 ) ), ' LUNI, ',

				 CONVERT( VARCHAR(3),  IIF( (MONTH( GETDATE() ) - MONTH(DATA_NAST) ) > 0,  YEAR( GETDATE() ) - YEAR(DATA_NAST),  
			     YEAR( GETDATE() ) - YEAR(DATA_NAST) -1  ) ), ' ANI ')  AS VARSTA
FROM ANGAJAT
ORDER BY NUME

SELECT CONCAT ( NUME, ' ', PRENUME) AS NUME_PRENUME, DATA_NAST FROM ANGAJAT
ORDER BY NUME
