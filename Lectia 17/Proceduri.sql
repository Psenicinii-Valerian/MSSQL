--PROCEDURI--
--PROCEDURA - SUBPROGRAM CE RETURNEAZA O VALOARE FINITA(CE NU MAI POATE FI PRELUCRATA)--

--SINTAXA--

CREATE PROCEDURE NUME_PROCEDURA [LISTA_PARAMTERII]
AS 
INTSTRUCTIUNI;

--APELUL UNEI PROCEDURI SE FACE PRIN INTERMEDIUL--
EXEC NUME_PROCEDURA [LISTA_PARAMETRII_REALI]
EXEC NUME_PROCEDURA [LISTA_PARAMETRII_REALI]
CALL NUME_PROCEDURA [LISTA_PARAMETRII_REALI]

--SA SE SCRIE PROCEDURA CE VA AFISA DATELE ANGAJATULUI PE BAZA UNOR PARAMETRI--
CREATE PROCEDURE PERS @NUME VARCHAR(20), @PRENUME VARCHAR(20)
AS
SELECT CONCAT(NUME, ' ',PRENUME) AS NPP, DENUMIRE_FUNCTIE, SUM(SALARIU) AS SALARIU
FROM ANGAJAT AN INNER JOIN ANGAJARE A ON A.ANGAJAT_ID = AN.ANGAJAT_ID
				INNER JOIN FUNCTIE F ON F.FUNCTIE_ID = A.FUNCTIE_ID
WHERE AN.NUME = @NUME AND AN.PRENUME = @PRENUME
GROUP BY CONCAT(NUME, ' ',PRENUME), DENUMIRE_FUNCTIE

EXEC PERS 'POPOV', 'ION'

--ALTA METODA DE EXECUTARE A PROCEDURII: --
EXEC PERS @PRENUME ='ION', @NUME = 'POPOV'


--SA SE SCRIE PROCEDURA CE VA AFISA PE BAZA DENUMIRII DEPARTAMENTULUI ANGAJATUL CEL MAI BINE-PLATIT--
--1) SCRIEM PROCEDURA CU DATELE INITIALE NECESARE--
CREATE PROCEDURE DEP_ANG_SAL
AS
SELECT CONCAT(NUME, ' ', PRENUME) AS NPP, SUM(SALARIU) AS SALARIUL, D.DENUMIRE_DEPART AS DEPARTAMENT
FROM ANGAJAT AN INNER JOIN ANGAJARE A ON A.ANGAJAT_ID = AN.ANGAJAT_ID
				INNER JOIN DEPARTAMENT D ON D.DEPARTAMENT_ID = A.DEPARTAMENT_ID
GROUP BY CONCAT(NUME, ' ', PRENUME), D.DENUMIRE_DEPART


--2) INSCRIEM DATELE PROCEDURII IN TABELA VIRTUALA--
ALTER PROCEDURE ANG_DEPART_SALMAX @DEP VARCHAR(50), @TIP VARCHAR(10)
AS 
CREATE TABLE #MYTABLE( NPP VARCHAR(50), SALARIUL DECIMAL(9,2), DEPARTAMENT VARCHAR(50) );
INSERT INTO #MYTABLE EXEC DEP_ANG_SAL @TIP;
SELECT * FROM #MYTABLE WHERE DEPARTAMENT = @DEP AND 
	SALARIUL = (SELECT IIF(@TIP = 'MAX', MAX(SALARIUL), MIN(SALARIUL)) FROM #MYTABLE WHERE DEPARTAMENT = @DEP)

EXEC ANG_DEPART_SALMAX @DEP = 'HR', @TIP = 'MIN'

--ALTA VARIANTA A PUNCTULUI 2: --
ALTER PROCEDURE ANG_DEPART_SALMAX @DEP VARCHAR(50)
AS 
CREATE TABLE #MYTABLE( NPP VARCHAR(50), SALARIUL DECIMAL(9,2), DEPARTAMENT VARCHAR(50) );
INSERT INTO #MYTABLE EXEC DEP_ANG_SAL;

SELECT *, 'SALARIUL MAXIM' AS TIP FROM #MYTABLE WHERE DEPARTAMENT = @DEP AND 
	SALARIUL = (SELECT MAX(SALARIUL) FROM #MYTABLE WHERE DEPARTAMENT = @DEP)

UNION

SELECT *, 'SALARIUL MINIM' AS TIP FROM #MYTABLE WHERE DEPARTAMENT = @DEP AND 
	SALARIUL = (SELECT MIN(SALARIUL) FROM #MYTABLE WHERE DEPARTAMENT = @DEP)

EXEC ANG_DEPART_SALMAX @DEP = 'IT'


--SA SE SCRIE O PROCEDURA CE VA ANALIZA BAZA ANGAJAT SI VA DETERMINA CARE SUNT DEPARTAMENTELE CU MAI MULTI ANGAJATI
--DE GEN MASCULIN SI DEPARTAMENTELE UNDE SUNT CEI MAI PUTINI ANGAJATI DE GEN FEMININ--
ALTER FUNCTION NR(@ID INT, @PARAM INT)
RETURNS INT
AS
BEGIN
DECLARE @VAR INT;

IF (@PARAM = 1)
BEGIN
	SET @VAR = (SELECT COUNT(*) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON A.ANGAJAT_ID = AN.ANGAJAT_ID
					WHERE A.DEPARTAMENT_ID = @ID AND AN.GEN = 1 AND DATA_ELIBERARII IS NULL)
END;

IF (@PARAM = 2)
BEGIN
	SET @VAR = (SELECT COUNT(*) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON A.ANGAJAT_ID = AN.ANGAJAT_ID
					WHERE A.DEPARTAMENT_ID = @ID AND AN.GEN = 0 AND DATA_ELIBERARII IS NULL)
END;

RETURN @VAR;

END;

CREATE FUNCTION ANGAJATI()
RETURNS TABLE 
AS
RETURN (SELECT DEPARTAMENT_ID, DENUMIRE_DEPART, DBO.NR(DEPARTAMENT_ID, 1) AS BARBATI, DBO.NR(DEPARTAMENT_ID, 2) AS FEMEI
		FROM DEPARTAMENT)

ALTER PROCEDURE GEN 
AS
SELECT 'MAX BARBATI' AS TIP, DENUMIRE_DEPART, BARBATI AS NR_PERSONAL FROM DBO.ANGAJATI() 
WHERE BARBATI = (SELECT MAX(BARBATI) FROM DBO.ANGAJATI()) AND BARBATI > 0
	UNION
SELECT 'MIN FEMEI' AS TIP, DENUMIRE_DEPART, FEMEI AS NR_PERSONAL FROM DBO.ANGAJATI() 
WHERE FEMEI = (SELECT MIN(FEMEI) FROM DBO.ANGAJATI() WHERE FEMEI > 0)


EXEC GEN

--PENTRU UN ANUMIT DEPARTAMENT SA SE INDICE: BARBATI (NR. LOR) > < = DECAT FEMEI (NR. LOR)--
CREATE FUNCTION NUMAR(@DEP VARCHAR(50), @PARAM INT)
RETURNS INT
AS
BEGIN
DECLARE @VAR INT;

IF (@PARAM = 1)
BEGIN
	SET @VAR = (SELECT COUNT(*) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON A.ANGAJAT_ID = AN.ANGAJAT_ID
												INNER JOIN DEPARTAMENT D ON A.DEPARTAMENT_ID = D.DEPARTAMENT_ID
					WHERE D.DENUMIRE_DEPART = @DEP AND AN.GEN = 1 AND DATA_ELIBERARII IS NULL)
END;

IF (@PARAM = 2)
BEGIN
	SET @VAR = (SELECT COUNT(*) FROM ANGAJARE A INNER JOIN ANGAJAT AN ON A.ANGAJAT_ID = AN.ANGAJAT_ID
												INNER JOIN DEPARTAMENT D ON D.DEPARTAMENT_ID = A.DEPARTAMENT_ID
					WHERE D.DENUMIRE_DEPART = @DEP AND AN.GEN = 0 AND DATA_ELIBERARII IS NULL)
END;

RETURN @VAR;

END;

ALTER PROCEDURE BF @DEP VARCHAR(30)
AS
SELECT 
(	
	CASE 

	WHEN DBO.NUMAR(@DEP, 1) > DBO.NUMAR(@DEP, 2) 
		THEN CONCAT('BARBATI (', DBO.NUMAR(@DEP, 1), ') > FEMEI(', DBO.NUMAR(@DEP, 2), ')')

	WHEN DBO.NUMAR(@DEP, 1) < DBO.NUMAR(@DEP, 2) 
		THEN CONCAT('BARBATI (', DBO.NUMAR(@DEP, 1), ') < FEMEI(', DBO.NUMAR(@DEP, 2), ')')

	WHEN DBO.NUMAR(@DEP, 1) = DBO.NUMAR(@DEP, 2) 
		THEN CONCAT('BARBATI (', DBO.NUMAR(@DEP, 1), ') = FEMEI(', DBO.NUMAR(@DEP, 2), ')')
		
	END
) AS RAPORT

EXEC BF @DEP = 'STRATEGIE SI BI'